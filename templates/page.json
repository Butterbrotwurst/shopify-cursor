{"sections":{"main":{"type":"main-page","blocks":{"heading":{"type":"text","name":"Title","settings":{"text":"<h1>{{ closest.page.title }}<\/h1>","width":"100%","max_width":"normal","alignment":"left","type_preset":"h2","font":"var(--font-body--family)","font_size":"1rem","line_height":"normal","letter_spacing":"normal","case":"none","wrap":"pretty","color":"var(--color-foreground)","background":false,"background_color":"#00000026","corner_radius":0,"padding-block-start":0,"padding-block-end":0,"padding-inline-start":0,"padding-inline-end":0},"blocks":{}},"page-content":{"type":"page-content","settings":{},"blocks":{}}},"block_order":["heading","page-content"],"settings":{"content_direction":"column","gap":32,"color_scheme":"","padding-block-start":40,"padding-block-end":5}},"custom_liquid_LqwkcD":{"type":"custom-liquid","name":"t:names.custom_liquid","settings":{"custom_liquid":"{% raw %}\n<style>\n  .cm3d-wrap{max-width:1100px;margin:0 auto;padding:32px 16px;position:relative}\n\n  \/* Fortschrittsbalken *\/\n  .cm3d-progress{display:flex;align-items:center;justify-content:center;margin:0 0 10px}\n  .cm3d-progress-inner{position:relative;width:min(560px,90vw);height:10px;background:#f3f4f6;border-radius:999px;overflow:hidden}\n  .cm3d-progress-bar{position:absolute;left:0;top:0;height:100%;width:0;background:#2563eb;transition:width .25s ease;border-radius:999px}\n  .cm3d-progress-text{margin-left:10px;font-size:12px;color:#4b5563}\n  .cm3d-progress.hidden{visibility:hidden;height:0;margin:0}\n\n  \/* Topbar: Suche *\/\n  .cm3d-topbar{display:flex;gap:8px;justify-content:center;align-items:center;margin-bottom:12px;flex-wrap:wrap}\n  .cm3d-input{width:min(560px,90vw);padding:10px 12px;border-radius:12px;border:1px solid #ddd;font-size:16px}\n  .cm3d-btn{padding:10px 14px;border-radius:12px;border:0;cursor:pointer;font-weight:600;transition:.2s all}\n  .cm3d-btn.primary{background:#111;color:#fff}\n  .cm3d-btn.secondary{background:#f3f4f6;color:#111;font-size:14px}\n  .cm3d-btn.icon{padding:10px 12px;display:flex;align-items:center;justify-content:center}\n\n  \/* Map *\/\n  .cm3d-map{height:70vh;border-radius:16px;overflow:hidden;border:1px solid #e5e7eb;position:relative}\n\n  \/* Secondary actions *\/\n  .cm3d-actions{display:flex;gap:8px;justify-content:center;margin-top:10px}\n\n  \/* CTA unten rechts *\/\n  .cm3d-cta{position:absolute;right:16px;bottom:-62px;z-index:10;display:none}\n  .cm3d-cta button{padding:14px 22px;font-size:16px;border-radius:14px;background:#2563eb;color:#fff;font-weight:700;cursor:pointer;box-shadow:0 4px 12px rgba(0,0,0,.25)}\n  .cm3d-cta button:hover{background:#1d4ed8}\n\n  \/* Autocomplete *\/\n  .cm3d-suggest-wrap{position:relative;flex:1;max-width:560px}\n  .cm3d-suggest{position:absolute;left:0;top:100%;margin-top:4px;width:100%;max-height:260px;overflow:auto;background:#fff;border:1px solid #e5e7eb;border-radius:12px;box-shadow:0 6px 16px rgba(0,0,0,.08);padding:6px;z-index:5;display:none}\n  .cm3d-suggest-item{padding:8px 10px;border-radius:8px;cursor:pointer;font-size:14px;line-height:1.2}\n  .cm3d-suggest-item:hover,.cm3d-suggest-item.active{background:#f3f4f6}\n\n  \/* Griffe *\/\n  .cm3d-handle{width:14px;height:14px;border-radius:50%;background:#111;border:2px solid #fff;box-shadow:0 0 0 2px rgba(0,0,0,.2);cursor:grab}\n  .cm3d-rotate{width:24px;height:24px;border-radius:50%;background:#fff;border:2px solid #111;box-shadow:0 0 0 2px rgba(0,0,0,.2);display:flex;align-items:center;justify-content:center;cursor:grab}\n  .cm3d-rotate svg{width:16px;height:16px;display:block}\n\n  \/* Cursor-Modi *\/\n  .cm3d-cursor-crosshair canvas{cursor:crosshair!important;}\n\n  \/* Modal Preview *\/\n  .cm3d-modal{position:fixed;inset:0;background:rgba(0,0,0,.5);backdrop-filter:saturate(120%) blur(2px);display:none;align-items:center;justify-content:center;z-index:50}\n  .cm3d-modal-box{width:min(1100px,92vw);height:min(80vh,880px);background:#fff;border-radius:16px;box-shadow:0 20px 60px rgba(0,0,0,.35);position:relative;overflow:hidden}\n  .cm3d-modal-header{position:absolute;left:0;right:0;top:0;height:48px;display:flex;align-items:center;justify-content:space-between;padding:0 12px;background:linear-gradient(180deg,rgba(255,255,255,.9),rgba(255,255,255,.6));z-index:2;border-bottom:1px solid #e5e7eb}\n  .cm3d-modal-title{font-weight:700}\n  .cm3d-modal-close{background:#111;color:#fff;border:0;border-radius:8px;padding:6px 10px;cursor:pointer}\n  .cm3d-preview-map{position:absolute;inset:48px 0 0 0}\n\n  \/* Modal Fortschrittsbalken *\/\n  .cm3d-modal-progress{position:absolute;left:12px;right:12px;top:52px;height:8px;background:#f3f4f6;border-radius:999px;overflow:hidden;z-index:3;display:none}\n  .cm3d-modal-progress .bar{height:100%;width:0;background:#2563eb;transition:width .25s ease}\n<\/style>\n\n<div class=\"cm3d-wrap\">\n  <!-- Fortschritt -->\n  <div id=\"cm3d-progress\" class=\"cm3d-progress hidden\" aria-live=\"polite\">\n    <div class=\"cm3d-progress-inner\">\n      <div class=\"cm3d-progress-bar\" id=\"cm3d-progress-bar\"><\/div>\n    <\/div>\n    <span class=\"cm3d-progress-text\" id=\"cm3d-progress-text\"><\/span>\n  <\/div>\n\n  <!-- Obere Suche -->\n  <div class=\"cm3d-topbar\">\n    <div class=\"cm3d-suggest-wrap\">\n      <input id=\"cm3d-address\" class=\"cm3d-input\" type=\"text\" placeholder=\"Adresse, Ort oder PLZ eingeben…\" autocomplete=\"off\" \/>\n      <div id=\"cm3d-suggest\" class=\"cm3d-suggest\"><\/div>\n    <\/div>\n    <button id=\"cm3d-search\" class=\"cm3d-btn primary\" aria-label=\"Adresse suchen\">Suchen<\/button>\n  <\/div>\n\n  <!-- Karte -->\n  <div style=\"position:relative\">\n    <div id=\"cm3d-map\" class=\"cm3d-map\"><\/div>\n    <!-- CTA unten rechts -->\n    <div class=\"cm3d-cta\"><button id=\"cm3d-preview\">Vorschau generieren<\/button><\/div>\n  <\/div>\n\n  <!-- Sekundäre Aktionen -->\n  <div class=\"cm3d-actions\">\n    <button id=\"cm3d-square\" class=\"cm3d-btn secondary\">Quadrat setzen<\/button>\n    <button id=\"cm3d-clear\" class=\"cm3d-btn secondary icon\" title=\"Zurücksetzen\" aria-label=\"Zurücksetzen\">\n      <!-- Trash Icon -->\n      <svg xmlns=\"http:\/\/www.w3.org\/2000\/svg\" viewBox=\"0 0 24 24\" width=\"18\" height=\"18\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"><polyline points=\"3 6 5 6 21 6\"\/><path d=\"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\/><\/svg>\n    <\/button>\n  <\/div>\n<\/div>\n\n<!-- Modal für 3D Preview -->\n<div id=\"cm3d-modal\" class=\"cm3d-modal\" role=\"dialog\" aria-modal=\"true\" aria-label=\"3D Vorschau\">\n  <div class=\"cm3d-modal-box\">\n    <div class=\"cm3d-modal-header\">\n      <div class=\"cm3d-modal-title\">3D-Vorschau<\/div>\n      <button id=\"cm3d-modal-close\" class=\"cm3d-modal-close\">Schließen<\/button>\n    <\/div>\n    <div class=\"cm3d-modal-progress\"><div class=\"bar\" id=\"cm3d-modal-bar\"><\/div><\/div>\n    <div id=\"cm3d-preview-map\" class=\"cm3d-preview-map\"><\/div>\n  <\/div>\n<\/div>\n\n<link href=\"https:\/\/unpkg.com\/maplibre-gl@3.6.2\/dist\/maplibre-gl.css\" rel=\"stylesheet\" \/>\n<script src=\"https:\/\/unpkg.com\/maplibre-gl@3.6.2\/dist\/maplibre-gl.js\"><\/script>\n<script src=\"https:\/\/unpkg.com\/@turf\/turf@6.5.0\/turf.min.js\"><\/script>\n\n<script>\ndocument.addEventListener('DOMContentLoaded', function(){\n  const API_KEY = \"LSpObHTl4mE43onP8EiH\";\n  const ROT_HANDLE_OFFSET_M = 25;\n\n  \/* ---------------- Fortschritt ---------------- *\/\n  const progWrap = document.getElementById('cm3d-progress');\n  const progBar  = document.getElementById('cm3d-progress-bar');\n  const progTxt  = document.getElementById('cm3d-progress-text');\n  function progressShow(text=\"\"){ progWrap.classList.remove('hidden'); setTimeout(()=>{},0); progTxt.textContent=text||\"\"; progBar.style.width='2%'; }\n  function progressSet(p,text){ progBar.style.width = Math.max(0,Math.min(100,p))+'%'; if(text!==undefined) progTxt.textContent=text; }\n  function progressDone(){ progBar.style.width='100%'; setTimeout(()=>{ progWrap.classList.add('hidden'); progBar.style.width='0%'; progTxt.textContent=\"\"; },400); }\n\n  \/* ---------------- Map (Editor) ---------------- *\/\n  const ctaBox = document.querySelector('.cm3d-cta');\n  const previewBtn = document.getElementById('cm3d-preview');\n\n  const map = new maplibregl.Map({\n    container: 'cm3d-map',\n    style: https:\/\/api.maptiler.com\/maps\/streets\/style.json?key=${API_KEY},\n    center: [8.6821, 50.1109],\n    zoom: 11\n  });\n  map.addControl(new maplibregl.NavigationControl({visualizePitch:true}), 'top-right');\n\n  \/\/ Zustand\n  let squareState = null; \/\/ {center:[lng,lat], halfDiag:m, diagBearing:deg}\n  let twoPointMode = false, firstCorner = null, tracker = null;\n  const handles = { corners: [], rotate: null };\n\n  map.on('load', ()=>{\n    map.addSource('square', { type:'geojson', data:emptyFC() });\n    map.addLayer({ id:'square-fill', type:'fill', source:'square', paint:{ 'fill-color':'#3b82f6','fill-opacity':0.08 }});\n    map.addLayer({ id:'square-line', type:'line', source:'square', paint:{ 'line-color':'#111','line-width':2 }});\n\n    map.addSource('rotateLink', { type:'geojson', data:emptyFC() });\n    map.addLayer({ id:'rotate-link', type:'line', source:'rotateLink', paint:{ 'line-color':'#111','line-width':1 }});\n  });\n\n  function emptyFC(){ return { type:'FeatureCollection', features:[] }; }\n  function setSource(id, geom){\n    const fc = geom ? { type:'FeatureCollection', features:[{ type:'Feature', geometry:geom, properties:{} }]} : emptyFC();\n    const src = map.getSource(id); if(src) src.setData(fc);\n  }\n\n  \/\/ Geometrie-Helfer\n  function cornersFromState(st){\n    const c = turf.point(st.center);\n    const offs=[0,90,180,270];\n    const pts=offs.map(o => turf.destination(c, st.halfDiag, st.diagBearing + o, {units:'meters'}).geometry.coordinates);\n    pts.push(pts[0]); return pts;\n  }\n  function topEdgeMidpoint(st){\n    const halfSide = st.halfDiag \/ Math.SQRT2;\n    return turf.destination(turf.point(st.center), halfSide, st.diagBearing + 45, {units:'meters'}).geometry.coordinates;\n  }\n  function rotateHandlePos(st){\n    const mid = topEdgeMidpoint(st);\n    return turf.destination(turf.point(mid), ROT_HANDLE_OFFSET_M, st.diagBearing + 45, {units:'meters'}).geometry.coordinates;\n  }\n  function updateVisuals(){\n    if(!squareState){ setSource('square', null); setSource('rotateLink', null); showCTA(false); return; }\n    const poly = { type:'Polygon', coordinates:[cornersFromState(squareState)] };\n    setSource('square', poly);\n    const mid = topEdgeMidpoint(squareState);\n    const rpos = rotateHandlePos(squareState);\n    setSource('rotateLink', { type:'LineString', coordinates:[mid, rpos] });\n    if(handles.corners.length===4){\n      const cr=cornersFromState(squareState);\n      [0,1,2,3].forEach(i=>handles.corners[i].setLngLat(cr[i]));\n    }\n    if(handles.rotate){ handles.rotate.setLngLat(rpos); }\n  }\n  function showCTA(show){ ctaBox.style.display = show ? 'block' : 'none'; }\n\n  \/\/ Griffe\n  function clearHandles(){ handles.corners.forEach(m=>m.remove()); handles.corners=[]; if(handles.rotate){ handles.rotate.remove(); handles.rotate=null; } }\n  function installHandles(){\n    clearHandles(); if(!squareState) return;\n    const cr = cornersFromState(squareState);\n    [0,1,2,3].forEach(i=>{\n      const el=document.createElement('div'); el.className='cm3d-handle'; el.title='Skalieren';\n      const mk=new maplibregl.Marker({element:el, draggable:true}).setLngLat(cr[i]).addTo(map);\n      mk.on('drag', ()=>{\n        const p=mk.getLngLat().toArray();\n        const distM=turf.distance(turf.point(squareState.center), turf.point(p), {units:'kilometers'})*1000;\n        squareState.halfDiag=Math.max(0.1, distM);\n        updateVisuals();\n      });\n      handles.corners.push(mk);\n    });\n    const elR=document.createElement('div'); elR.className='cm3d-rotate'; elR.title='Zum Drehen ziehen';\n    elR.innerHTML = <svg viewBox=\"0 0 24 24\" aria-hidden=\"true\"><path d=\"M12 5v-2l4 3-4 3V7a5 5 0 1 0 4.9 6h2.02A7 7 0 1 1 12 5z\" fill=\"#111\"\/><\/svg>;\n    const mkR=new maplibregl.Marker({element:elR, draggable:true}).setLngLat(rotateHandlePos(squareState)).addTo(map);\n    mkR.on('drag', ()=>{\n      const p=mkR.getLngLat().toArray();\n      const b=turf.bearing(turf.point(squareState.center), turf.point(p));\n      squareState.diagBearing=b-45;\n      updateVisuals();\n    });\n    handles.rotate=mkR;\n    updateVisuals();\n    showCTA(true);\n  }\n\n  \/\/ Fläche live verschieben\n  let dragging=false, dragStartPx=null, startCenterPx=null;\n  function polygonContains(lngLat){\n    if(!squareState) return false;\n    const poly={ type:'Polygon', coordinates:[cornersFromState(squareState)] };\n    return turf.booleanPointInPolygon([lngLat.lng, lngLat.lat], poly);\n  }\n  map.on('mousemove', (e)=>{\n    if(twoPointMode){\n      map.getContainer().classList.add('cm3d-cursor-crosshair');\n      if(firstCorner){\n        const cur=[e.lngLat.lng,e.lngLat.lat];\n        const center=turf.midpoint(turf.point(firstCorner), turf.point(cur)).geometry.coordinates;\n        const halfDiag=turf.distance(turf.point(center), turf.point(firstCorner), {units:'kilometers'})*1000;\n        const diagBearing=45; \/\/ Nordausrichtung\n        squareState={center,halfDiag,diagBearing};\n        updateVisuals();\n        if(!tracker){\n          const el=document.createElement('div'); el.className='cm3d-handle'; el.style.width='10px'; el.style.height='10px';\n          tracker=new maplibregl.Marker({element:el}).setLngLat(cur).addTo(map);\n        } else { tracker.setLngLat(cur); }\n      }\n      return;\n    } else { map.getContainer().classList.remove('cm3d-cursor-crosshair'); }\n\n    if(!dragging){\n      if(polygonContains(e.lngLat)) map.getCanvas().style.cursor='grab';\n      else map.getCanvas().style.cursor='';\n    } else {\n      const nowPx=map.project(e.lngLat); const dx=nowPx.x-dragStartPx.x, dy=nowPx.y-dragStartPx.y;\n      const newCenter=map.unproject({x:startCenterPx.x+dx, y:startCenterPx.y+dy});\n      squareState.center=[newCenter.lng,newCenter.lat];\n      updateVisuals();\n    }\n  });\n  map.on('mousedown', (e)=>{\n    if(twoPointMode || !squareState) return;\n    if(!polygonContains(e.lngLat)) return;\n    dragging=true; map.dragPan.disable();\n    dragStartPx=map.project(e.lngLat);\n    startCenterPx=map.project(new maplibregl.LngLat(squareState.center[0], squareState.center[1]));\n    function onUp(){ dragging=false; map.dragPan.enable(); map.off('mouseup', onUp); }\n    map.on('mouseup', onUp);\n  });\n\n  \/\/ Zwei-Punkt-Erstellung\n  const squareBtn=document.getElementById('cm3d-square');\n  squareBtn.addEventListener('click', ()=>{\n    twoPointMode=!twoPointMode; firstCorner=null;\n    if(!twoPointMode && tracker){ tracker.remove(); tracker=null; }\n    squareBtn.classList.toggle('secondary', !twoPointMode);\n  });\n  map.on('click', (e)=>{\n    if(!twoPointMode) return;\n    const pt=[e.lngLat.lng,e.lngLat.lat];\n    if(!firstCorner){ firstCorner=pt; return; }\n    twoPointMode=false;\n    if(tracker){ tracker.remove(); tracker=null; }\n    squareBtn.classList.add('secondary');\n    installHandles();\n  });\n\n  \/\/ CTA Preview -> Modal\n  previewBtn.addEventListener('click', openPreviewModal);\n\n  \/\/ Zurücksetzen\n  document.getElementById('cm3d-clear').addEventListener('click', ()=>{\n    squareState=null; setSource('square', null); setSource('rotateLink', null);\n    clearHandles(); if(tracker){ tracker.remove(); tracker=null; }\n    showCTA(false);\n  });\n\n  \/* ---------------- Suche & Autocomplete ---------------- *\/\n  const input=document.getElementById('cm3d-address');\n  const suggestBox=document.getElementById('cm3d-suggest');\n  let latestQuery='';\n\n  const debounce=(fn,wait=220)=>{let t;return(...a)=>{clearTimeout(t);t=setTimeout(()=>fn(...a),wait);};};\n\n  async function fetchSuggestions(q){\n    const url=https:\/\/api.maptiler.com\/geocoding\/${encodeURIComponent(q)}.json?key=${API_KEY}&autocomplete=true&limit=5&language=de;\n    const res=await fetch(url); if(!res.ok) return [];\n    const data=await res.json();\n    return (data.features||[]).map(f=>({ name:f.place_name||f.text||'Treffer', center:f.center, bbox:f.bbox }));\n  }\n  function renderSuggestions(items){\n    suggestBox.innerHTML=''; if(!items.length){ suggestBox.style.display='none'; return; }\n    items.forEach(it=>{\n      const el=document.createElement('div'); el.className='cm3d-suggest-item'; el.textContent=it.name;\n      el.addEventListener('mousedown', e=>{e.preventDefault(); input.value=it.name; suggestBox.style.display='none';\n        if(it.center){ map.flyTo({center:it.center, zoom:it.bbox?12:13}); }});\n      suggestBox.appendChild(el);\n    });\n    suggestBox.style.display='block';\n  }\n  const onInput=debounce(async()=>{\n    const q=input.value.trim(); latestQuery=q;\n    if(q.length<3){ suggestBox.style.display='none'; return; }\n    progressShow('Suche…'); progressSet(15);\n    const items=await fetchSuggestions(q); if(q!==latestQuery){ progressDone(); return; }\n    renderSuggestions(items); progressDone();\n  },250);\n  input.addEventListener('input', onInput);\n\n  document.getElementById('cm3d-search').addEventListener('click', async ()=>{\n    const q=input.value.trim(); if(!q) return;\n    try{\n      progressShow('Adresse wird gesucht…'); progressSet(30);\n      const url=https:\/\/api.maptiler.com\/geocoding\/${encodeURIComponent(q)}.json?key=${API_KEY}&limit=1&language=de;\n      const res=await fetch(url); progressSet(70,'Karte wird zentriert…');\n      const d=await res.json();\n      if(!d.features || !d.features.length){ progressDone(); return; }\n      const hit=d.features[0];\n      map.flyTo({center:hit.center, zoom:hit.bbox?12:13});\n    }catch(e){ console.error(e); }\n    finally{ progressDone(); }\n  });\n\n  \/* ---------------- 3D Preview Modal (eigene Map) ---------------- *\/\n  const modal=document.getElementById('cm3d-modal');\n  const modalClose=document.getElementById('cm3d-modal-close');\n  const modalBar=document.getElementById('cm3d-modal-bar');\n  const modalProg=document.querySelector('.cm3d-modal-progress');\n  let previewMap=null;\n\n  function modalProgressStart(){ modalProg.style.display='block'; modalBar.style.width='0%'; requestAnimationFrame(()=>{ modalBar.style.width='35%'; }); }\n  function modalProgressAdvance(p){ modalBar.style.width=p+'%'; }\n  function modalProgressDone(){ modalBar.style.width='100%'; setTimeout(()=>{ modalProg.style.display='none'; modalBar.style.width='0%'; },350); }\n\n  function openPreviewModal(){\n    if(!squareState) return;\n    modal.style.display='flex';\n    if(!previewMap){\n      modalProgressStart();\n      previewMap = new maplibregl.Map({\n        container: 'cm3d-preview-map',\n        style: https:\/\/api.maptiler.com\/maps\/streets\/style.json?key=${API_KEY},\n        center: squareState.center,\n        zoom: 16,\n        pitch: 70,\n        bearing: 30,\n        dragPan: false\n      });\n      previewMap.addControl(new maplibregl.NavigationControl({visualizePitch:true}), 'top-right');\n      previewMap.on('load', ()=>{\n        \/\/ Fog für Tiefenwirkung\n        previewMap.setFog({ \"range\":[0.5,10], \"color\":\"#d8e8ff\", \"horizon-blend\":0.2 });\n        \/\/ Gebäude-Layer\n        if(!previewMap.getLayer('bldg')){\n          previewMap.addLayer({\n            id:'bldg',\n            type:'fill-extrusion',\n            source:'openmaptiles',\n            'source-layer':'building',\n            minzoom:13,\n            paint:{\n              'fill-extrusion-color':'#c8c9cc',\n              'fill-extrusion-height':['coalesce',['get','render_height'],['get','height'],15],\n              'fill-extrusion-base':['coalesce',['get','render_min_height'],['get','min_height'],0],\n              'fill-extrusion-opacity':0.95\n            }\n          });\n        }\n        \/\/ nur innerhalb des Quadrats\n        const poly={ type:'Polygon', coordinates:[cornersFromState(squareState)] };\n        previewMap.setFilter('bldg', ['within', poly]);\n\n        \/\/ auf Polygon zoomen\n        const bbox=turf.bbox(poly);\n        previewMap.fitBounds([[bbox[0],bbox[1]],[bbox[2],bbox[3]]], { padding:60, duration:600 });\n      });\n      previewMap.on('idle', ()=> modalProgressDone());\n\n      \/\/ Orbit-Steuerung: links ziehen = Bearing, hoch\/runter = Pitch (Zentrum bleibt fix)\n      let orbiting=false, start={x:0,y:0}, startBearing=0, startPitch=0, orbitCenter=squareState.center;\n      previewMap.getCanvas().style.cursor='grab';\n      previewMap.on('mousedown', (e)=>{\n        orbiting=true; start={x:e.point.x,y:e.point.y}; startBearing=previewMap.getBearing(); startPitch=previewMap.getPitch();\n        previewMap.getCanvas().style.cursor='grabbing';\n        \/\/ wir fixieren das Zentrum:\n        previewMap.setCenter(orbitCenter);\n        function onUp(){ orbiting=false; previewMap.getCanvas().style.cursor='grab'; previewMap.off('mouseup', onUp); }\n        previewMap.on('mouseup', onUp);\n      });\n      previewMap.on('mousemove', (e)=>{\n        if(!orbiting) return;\n        const dx=e.point.x-start.x, dy=e.point.y-start.y;\n        let newBearing=startBearing + dx*0.3;\n        let newPitch = Math.max(10, Math.min(85, startPitch - dy*0.25));\n        previewMap.setCenter(orbitCenter);\n        previewMap.setBearing(newBearing);\n        previewMap.setPitch(newPitch);\n      });\n    } else {\n      \/\/ Update Filter & Center, falls Quadrat geändert wurde\n      const poly={ type:'Polygon', coordinates:[cornersFromState(squareState)] };\n      if(previewMap.getLayer('bldg')) previewMap.setFilter('bldg', ['within', poly]);\n      const bbox=turf.bbox(poly);\n      previewMap.fitBounds([[bbox[0],bbox[1]],[bbox[2],bbox[3]]], { padding:60, duration:600 });\n    }\n  }\n  function closePreviewModal(){ modal.style.display='none'; }\n  modalClose.addEventListener('click', closePreviewModal);\n  modal.addEventListener('click', (e)=>{ if(e.target===modal) closePreviewModal(); });\n  document.addEventListener('keydown', (e)=>{ if(e.key==='Escape' && modal.style.display==='flex') closePreviewModal(); });\n});\n<\/script>\n{% endraw %}","color_scheme":"","section_width":"page-width","padding-block-start":0,"padding-block-end":0}}},"order":["main","custom_liquid_LqwkcD"]}